// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`xmltest/not-wellformed standalone should match 001.xml with snapshot: caught 1`] = `"Opening and ending tag mismatch: "doc" != "a""`;

exports[`xmltest/not-wellformed standalone should match 002.xml with snapshot: caught 1`] = `"end tag name contains invalid characters: ".doc""`;

exports[`xmltest/not-wellformed standalone should match 003.xml with snapshot: caught 1`] = `"Invalid processing instruction starting at position 5"`;

exports[`xmltest/not-wellformed standalone should match 004.xml with snapshot: caught 1`] = `"Invalid processing instruction starting at position 5"`;

exports[`xmltest/not-wellformed standalone should match 005.xml with snapshot: caught 1`] = `"Invalid processing instruction starting at position 5"`;

exports[`xmltest/not-wellformed standalone should match 006.xml with snapshot: caught 1`] = `"comment is not well-formed at position 5"`;

exports[`xmltest/not-wellformed standalone should match 007.xml with snapshot: reported 1`] = `
{
  "actual": "<doc>&amp;amp no refc</doc>",
  "errors": [
    [
      "error",
      "EntityRef: expecting ;",
      {
        "columnNumber": 6,
        "lineNumber": 1,
      },
    ],
  ],
}
`;

exports[`xmltest/not-wellformed standalone should match 008.xml with snapshot: reported 1`] = `
{
  "actual": "<doc>&amp;.entity;</doc>",
}
`;

exports[`xmltest/not-wellformed standalone should match 009.xml with snapshot: reported 1`] = `
{
  "actual": "<doc>&amp;#RE;</doc>",
  "errors": [
    [
      "error",
      "entity not matching Reference production: &#RE;",
      {
        "columnNumber": 6,
        "lineNumber": 1,
      },
    ],
  ],
}
`;

exports[`xmltest/not-wellformed standalone should match 010.xml with snapshot: reported 1`] = `
{
  "actual": "<doc>A &amp; B</doc>",
}
`;

exports[`xmltest/not-wellformed standalone should match 011.xml with snapshot: reported 1`] = `
{
  "actual": "<doc a1="a1"/>",
  "errors": [
    [
      "warning",
      "attribute "a1" missed value!! "a1" instead!!",
      {
        "columnNumber": 6,
        "lineNumber": 1,
      },
    ],
  ],
}
`;

exports[`xmltest/not-wellformed standalone should match 012.xml with snapshot: reported 1`] = `
{
  "actual": "<doc a1="v1"/>",
  "errors": [
    [
      "warning",
      "attribute "v1" missed quot(")!",
      {
        "columnNumber": 9,
        "lineNumber": 1,
      },
    ],
  ],
}
`;

exports[`xmltest/not-wellformed standalone should match 013.xml with snapshot: caught 1`] = `"missing root element"`;

exports[`xmltest/not-wellformed standalone should match 014.xml with snapshot: caught 1`] = `"Unescaped '<' not allowed in attributes values"`;

exports[`xmltest/not-wellformed standalone should match 015.xml with snapshot: caught 1`] = `"AttValue: ' or " expected"`;

exports[`xmltest/not-wellformed standalone should match 016.xml with snapshot: caught 1`] = `"missing root element"`;

exports[`xmltest/not-wellformed standalone should match 017.xml with snapshot: caught 1`] = `"Invalid CDATA starting at position 5"`;

exports[`xmltest/not-wellformed standalone should match 018.xml with snapshot: caught 1`] = `"Invalid CDATA starting at position 5"`;

exports[`xmltest/not-wellformed standalone should match 019.xml with snapshot: caught 1`] = `"end tag name missing"`;

exports[`xmltest/not-wellformed standalone should match 020.xml with snapshot: reported 1`] = `
{
  "actual": "<doc a1="A &amp; B"/>",
}
`;

exports[`xmltest/not-wellformed standalone should match 021.xml with snapshot: reported 1`] = `
{
  "actual": "<doc a1="a&amp;b"/>",
  "errors": [
    [
      "error",
      "EntityRef: expecting ;",
      {
        "columnNumber": 9,
        "lineNumber": 1,
      },
    ],
  ],
}
`;

exports[`xmltest/not-wellformed standalone should match 022.xml with snapshot: reported 1`] = `
{
  "actual": "<doc a1="&amp;#123:"/>",
  "errors": [
    [
      "error",
      "EntityRef: expecting ;",
      {
        "columnNumber": 9,
        "lineNumber": 1,
      },
    ],
  ],
}
`;

exports[`xmltest/not-wellformed standalone should match 023.xml with snapshot: caught 1`] = `"missing root element"`;

exports[`xmltest/not-wellformed standalone should match 024.xml with snapshot: caught 1`] = `"end tag name contains invalid characters: "123""`;

exports[`xmltest/not-wellformed standalone should match 025.xml with snapshot: reported 1`] = `
{
  "actual": "<doc>]]&gt;</doc>",
}
`;

exports[`xmltest/not-wellformed standalone should match 026.xml with snapshot: reported 1`] = `
{
  "actual": "<doc>]]]&gt;</doc>",
}
`;

exports[`xmltest/not-wellformed standalone should match 027.xml with snapshot: caught 1`] = `"comment is not well-formed at position 6"`;

exports[`xmltest/not-wellformed standalone should match 028.xml with snapshot: caught 1`] = `"Invalid processing instruction starting at position 6"`;

exports[`xmltest/not-wellformed standalone should match 029.xml with snapshot: reported 1`] = `
{
  "actual": "<doc>abc]]]&gt;def</doc>",
}
`;

exports[`xmltest/not-wellformed standalone should match 030.xml with snapshot: reported 1`] = `
{
  "actual": "<doc>A form feed () is not legal in data</doc>",
}
`;

exports[`xmltest/not-wellformed standalone should match 031.xml with snapshot: caught 1`] = `"Invalid processing instruction starting at position 5"`;

exports[`xmltest/not-wellformed standalone should match 032.xml with snapshot: caught 1`] = `"comment is not well-formed at position 5"`;

exports[`xmltest/not-wellformed standalone should match 033.xml with snapshot: reported 1`] = `
{
  "actual": "<doc>abc{!1b!}def</doc>",
}
`;

exports[`xmltest/not-wellformed standalone should match 034.xml with snapshot: caught 1`] = `"end tag name contains invalid characters: "doc""`;

exports[`xmltest/not-wellformed standalone should match 035.xml with snapshot: reported 1`] = `
{
  "actual": "<doc>1 &lt; 2 but not in XML</doc>",
  "errors": [
    [
      "error",
      "element parse error: Error: invalid tagName:",
      {
        "columnNumber": 9,
        "lineNumber": 1,
      },
    ],
  ],
}
`;

exports[`xmltest/not-wellformed standalone should match 036.xml with snapshot: reported 1`] = `
{
  "actual": "<doc/>",
  "errors": [
    [
      "error",
      "Extra content at the end of the document",
      {
        "columnNumber": 1,
        "lineNumber": 1,
      },
    ],
  ],
}
`;

exports[`xmltest/not-wellformed standalone should match 037.xml with snapshot: reported 1`] = `
{
  "actual": "<doc/>",
  "errors": [
    [
      "error",
      "Extra content at the end of the document",
      {
        "columnNumber": 1,
        "lineNumber": 1,
      },
    ],
  ],
}
`;

exports[`xmltest/not-wellformed standalone should match 038.xml with snapshot: caught 1`] = `"Attribute x redefined"`;

exports[`xmltest/not-wellformed standalone should match 039.xml with snapshot: caught 1`] = `"Opening and ending tag mismatch: "a" != "aa""`;

exports[`xmltest/not-wellformed standalone should match 040.xml with snapshot: caught 1`] = `"HierarchyRequestError: Only one element can be added and only after doctype"`;

exports[`xmltest/not-wellformed standalone should match 041.xml with snapshot: caught 1`] = `"HierarchyRequestError: Only one element can be added and only after doctype"`;

exports[`xmltest/not-wellformed standalone should match 042.xml with snapshot: caught 1`] = `"end tag name contains invalid characters: "doc/""`;

exports[`xmltest/not-wellformed standalone should match 043.xml with snapshot: reported 1`] = `
{
  "actual": "<doc/>",
  "errors": [
    [
      "error",
      "Extra content at the end of the document",
      {
        "columnNumber": 1,
        "lineNumber": 1,
      },
    ],
  ],
}
`;

exports[`xmltest/not-wellformed standalone should match 044.xml with snapshot: caught 1`] = `"HierarchyRequestError: Only one element can be added and only after doctype"`;

exports[`xmltest/not-wellformed standalone should match 045.xml with snapshot: reported 1`] = `
{
  "actual": "<doc>
&lt;a/
</doc>",
  "errors": [
    [
      "error",
      "element parse error: Error: elements closed character '/' and '>' must be connected to",
      {
        "columnNumber": 2,
        "lineNumber": 2,
      },
    ],
  ],
}
`;

exports[`xmltest/not-wellformed standalone should match 046.xml with snapshot: caught 1`] = `"Opening and ending tag mismatch: "doc" != "a""`;

exports[`xmltest/not-wellformed standalone should match 047.xml with snapshot: reported 1`] = `
{
  "actual": "<doc>
<a/>
</doc>",
}
`;

exports[`xmltest/not-wellformed standalone should match 048.xml with snapshot: reported 1`] = `
{
  "actual": "<doc>
</doc>
",
}
`;

exports[`xmltest/not-wellformed standalone should match 049.xml with snapshot: caught 1`] = `"Opening and ending tag mismatch: "doc" != "a""`;

exports[`xmltest/not-wellformed standalone should match 050.xml with snapshot: caught 1`] = `"missing root element"`;

exports[`xmltest/not-wellformed standalone should match 051.xml with snapshot: caught 1`] = `"CDATA outside of element"`;

exports[`xmltest/not-wellformed standalone should match 052.xml with snapshot: reported 1`] = `
{
  "actual": "<!-- a comment -->
 
<doc/>",
  "errors": [
    [
      "error",
      "Unexpected content outside root element: '&#32;'",
      {
        "columnNumber": 1,
        "lineNumber": 3,
      },
    ],
  ],
}
`;

exports[`xmltest/not-wellformed standalone should match 053.xml with snapshot: caught 1`] = `"Opening and ending tag mismatch: "doc" != "DOC""`;

exports[`xmltest/not-wellformed standalone should match 054.xml with snapshot: caught 1`] = `"Error in internal subset at position 16"`;

exports[`xmltest/not-wellformed standalone should match 055.xml with snapshot: caught 1`] = `"Error detected in Markup declaration"`;

exports[`xmltest/not-wellformed standalone should match 056.xml with snapshot: caught 1`] = `"doctype not terminated with > at position 14"`;

exports[`xmltest/not-wellformed standalone should match 057.xml with snapshot: caught 1`] = `"Error in internal subset at position 16"`;

exports[`xmltest/not-wellformed standalone should match 058.xml with snapshot: caught 1`] = `"Error in internal subset at position 41"`;

exports[`xmltest/not-wellformed standalone should match 059.xml with snapshot: caught 1`] = `"Error in internal subset at position 41"`;

exports[`xmltest/not-wellformed standalone should match 060.xml with snapshot: caught 1`] = `"Error in internal subset at position 41"`;

exports[`xmltest/not-wellformed standalone should match 061.xml with snapshot: caught 1`] = `"Error in internal subset at position 16"`;

exports[`xmltest/not-wellformed standalone should match 062.xml with snapshot: caught 1`] = `"Error in internal subset at position 16"`;

exports[`xmltest/not-wellformed standalone should match 063.xml with snapshot: caught 1`] = `"Error in internal subset at position 16"`;

exports[`xmltest/not-wellformed standalone should match 064.xml with snapshot: caught 1`] = `"Error in internal subset at position 41"`;

exports[`xmltest/not-wellformed standalone should match 065.xml with snapshot: caught 1`] = `"Error in internal subset at position 41"`;

exports[`xmltest/not-wellformed standalone should match 066.xml with snapshot: caught 1`] = `"Error in internal subset at position 41"`;

exports[`xmltest/not-wellformed standalone should match 067.xml with snapshot: caught 1`] = `"Error in internal subset at position 41"`;

exports[`xmltest/not-wellformed standalone should match 068.xml with snapshot: caught 1`] = `"Error in internal subset at position 41"`;

exports[`xmltest/not-wellformed standalone should match 069.xml with snapshot: caught 1`] = `"Error in internal subset at position 85"`;

exports[`xmltest/not-wellformed standalone should match 070.xml with snapshot: caught 1`] = `"comment is not well-formed at position 0"`;

exports[`xmltest/not-wellformed standalone should match 071.xml with snapshot: reported 1`] = `
{
  "actual": "<!DOCTYPE doc [
<!ENTITY e1 "&e2;">
<!ENTITY e2 "&e3;">
<!ENTITY e3 "&e1;">
]>
<doc>&amp;e1;</doc>",
  "errors": [
    [
      "error",
      "entity not found:&e1;",
      {
        "columnNumber": 6,
        "lineNumber": 6,
      },
    ],
  ],
}
`;

exports[`xmltest/not-wellformed standalone should match 072.xml with snapshot: reported 1`] = `
{
  "actual": "<doc>&amp;foo;</doc>",
  "errors": [
    [
      "error",
      "entity not found:&foo;",
      {
        "columnNumber": 6,
        "lineNumber": 1,
      },
    ],
  ],
}
`;

exports[`xmltest/not-wellformed standalone should match 073.xml with snapshot: reported 1`] = `
{
  "actual": "<!DOCTYPE doc [
<!ENTITY e "whatever">
]>
<doc>&amp;f;</doc>",
  "errors": [
    [
      "error",
      "entity not found:&f;",
      {
        "columnNumber": 6,
        "lineNumber": 4,
      },
    ],
  ],
}
`;

exports[`xmltest/not-wellformed standalone should match 074.xml with snapshot: reported 1`] = `
{
  "actual": "<!DOCTYPE doc [
<!ENTITY e "</foo><foo>">
]>
<doc>
<foo>&amp;e;</foo>
</doc>",
  "errors": [
    [
      "error",
      "entity not found:&e;",
      {
        "columnNumber": 15,
        "lineNumber": 5,
      },
    ],
  ],
}
`;

exports[`xmltest/not-wellformed standalone should match 075.xml with snapshot: reported 1`] = `
{
  "actual": "<!DOCTYPE doc [
<!ENTITY e1 "&e2;">
<!ENTITY e2 "&e3;">
<!ENTITY e3 "&e1;">
]>
<doc a="&amp;e1;"/>",
  "errors": [
    [
      "error",
      "entity not found:&e1;",
      {
        "columnNumber": 8,
        "lineNumber": 6,
      },
    ],
  ],
}
`;

exports[`xmltest/not-wellformed standalone should match 076.xml with snapshot: reported 1`] = `
{
  "actual": "<doc a="&amp;foo;"/>",
  "errors": [
    [
      "error",
      "entity not found:&foo;",
      {
        "columnNumber": 8,
        "lineNumber": 1,
      },
    ],
  ],
}
`;

exports[`xmltest/not-wellformed standalone should match 077.xml with snapshot: reported 1`] = `
{
  "actual": "<!DOCTYPE doc [
<!ENTITY foo "&bar;">
]>
<doc a="&amp;foo;"/>",
  "errors": [
    [
      "error",
      "entity not found:&foo;",
      {
        "columnNumber": 8,
        "lineNumber": 4,
      },
    ],
  ],
}
`;

exports[`xmltest/not-wellformed standalone should match 078.xml with snapshot: reported 1`] = `
{
  "actual": "<!DOCTYPE doc [
<!ELEMENT doc (#PCDATA)>
<!ATTLIST doc a CDATA "&foo;">
]>
<doc/>",
}
`;

exports[`xmltest/not-wellformed standalone should match 079.xml with snapshot: reported 1`] = `
{
  "actual": "<!DOCTYPE doc [
<!ENTITY e1 "&e2;">
<!ENTITY e2 "&e3;">
<!ENTITY e3 "&e1;">
<!ELEMENT doc (#PCDATA)>
<!ATTLIST doc a CDATA "&e1;">
]>
<doc/>",
}
`;

exports[`xmltest/not-wellformed standalone should match 080.xml with snapshot: reported 1`] = `
{
  "actual": "<!DOCTYPE doc [
<!ENTITY e1 "&e2;">
<!ENTITY e2 "&e3;">
<!ENTITY e3 "&e1;">
<!ELEMENT doc (#PCDATA)>
<!ATTLIST doc a CDATA #FIXED "&e1;">
]>
<doc/>",
}
`;

exports[`xmltest/not-wellformed standalone should match 081.xml with snapshot: reported 1`] = `
{
  "actual": "<!DOCTYPE doc [
<!ENTITY e SYSTEM "nul">
]>
<doc a="&amp;e;"/>",
  "errors": [
    [
      "error",
      "entity not found:&e;",
      {
        "columnNumber": 8,
        "lineNumber": 4,
      },
    ],
  ],
}
`;

exports[`xmltest/not-wellformed standalone should match 082.xml with snapshot: reported 1`] = `
{
  "actual": "<!DOCTYPE doc [
<!ENTITY e SYSTEM "nul">
<!ELEMENT doc (#PCDATA)>
<!ATTLIST doc a CDATA "&e;">
]>
<doc/>",
}
`;

exports[`xmltest/not-wellformed standalone should match 083.xml with snapshot: reported 1`] = `
{
  "actual": "<!DOCTYPE doc [
<!ENTITY e SYSTEM "nul" NDATA n>
]>
<doc>&amp;e;</doc>",
  "errors": [
    [
      "error",
      "entity not found:&e;",
      {
        "columnNumber": 6,
        "lineNumber": 4,
      },
    ],
  ],
}
`;

exports[`xmltest/not-wellformed standalone should match 084.xml with snapshot: reported 1`] = `
{
  "actual": "<!DOCTYPE doc [
<!ENTITY e SYSTEM "nul" NDATA n>
<!ELEMENT doc (#PCDATA)>
<!ATTLIST doc a CDATA "&e;">
]>
<doc/>",
}
`;

exports[`xmltest/not-wellformed standalone should match 085.xml with snapshot: caught 1`] = `"doctype external id is not well-formed at position 14"`;

exports[`xmltest/not-wellformed standalone should match 086.xml with snapshot: caught 1`] = `"Error in internal subset at position 16"`;

exports[`xmltest/not-wellformed standalone should match 087.xml with snapshot: caught 1`] = `"Error in internal subset at position 16"`;

exports[`xmltest/not-wellformed standalone should match 088.xml with snapshot: caught 1`] = `"missing root element"`;

exports[`xmltest/not-wellformed standalone should match 089.xml with snapshot: caught 1`] = `"Error in internal subset at position 16"`;

exports[`xmltest/not-wellformed standalone should match 090.xml with snapshot: reported 1`] = `
{
  "actual": "<!DOCTYPE doc [
<!ENTITY e "<foo a='&#60;'></foo>">
]>
<doc>&amp;e;</doc>",
  "errors": [
    [
      "error",
      "entity not found:&e;",
      {
        "columnNumber": 6,
        "lineNumber": 4,
      },
    ],
  ],
}
`;

exports[`xmltest/not-wellformed standalone should match 091.xml with snapshot: caught 1`] = `"Error in internal subset at position 41"`;

exports[`xmltest/not-wellformed standalone should match 092.xml with snapshot: reported 1`] = `
{
  "actual": "<!DOCTYPE doc [
<!ENTITY e "<foo a='&#38;'></foo>">
]>
<doc>&amp;e;</doc>",
  "errors": [
    [
      "error",
      "entity not found:&e;",
      {
        "columnNumber": 6,
        "lineNumber": 4,
      },
    ],
  ],
}
`;

exports[`xmltest/not-wellformed standalone should match 093.xml with snapshot: reported 1`] = `
{
  "actual": "<doc>&amp;#X58;</doc>",
  "errors": [
    [
      "error",
      "entity not matching Reference production: &#X58;",
      {
        "columnNumber": 6,
        "lineNumber": 1,
      },
    ],
  ],
}
`;

exports[`xmltest/not-wellformed standalone should match 094.xml with snapshot: caught 1`] = `"xml declaration is not well-formed"`;

exports[`xmltest/not-wellformed standalone should match 095.xml with snapshot: caught 1`] = `"xml declaration is not well-formed"`;

exports[`xmltest/not-wellformed standalone should match 096.xml with snapshot: caught 1`] = `"xml declaration is not well-formed"`;

exports[`xmltest/not-wellformed standalone should match 097.xml with snapshot: caught 1`] = `"xml declaration is not well-formed"`;

exports[`xmltest/not-wellformed standalone should match 098.xml with snapshot: caught 1`] = `"xml declaration is not well-formed"`;

exports[`xmltest/not-wellformed standalone should match 099.xml with snapshot: caught 1`] = `"xml declaration is not well-formed"`;

exports[`xmltest/not-wellformed standalone should match 100.xml with snapshot: caught 1`] = `"xml declaration is not well-formed"`;

exports[`xmltest/not-wellformed standalone should match 101.xml with snapshot: caught 1`] = `"xml declaration is not well-formed"`;

exports[`xmltest/not-wellformed standalone should match 102.xml with snapshot: caught 1`] = `"xml declaration is not well-formed"`;

exports[`xmltest/not-wellformed standalone should match 103.xml with snapshot: reported 1`] = `
{
  "actual": "<!DOCTYPE doc [
<!ENTITY e "&#60;foo>">
]>
<doc>&amp;e;</doc>",
  "errors": [
    [
      "error",
      "entity not found:&e;",
      {
        "columnNumber": 6,
        "lineNumber": 4,
      },
    ],
  ],
}
`;

exports[`xmltest/not-wellformed standalone should match 104.xml with snapshot: caught 1`] = `"Opening and ending tag mismatch: "doc" != "foo""`;

exports[`xmltest/not-wellformed standalone should match 105.xml with snapshot: caught 1`] = `"CDATA outside of element"`;

exports[`xmltest/not-wellformed standalone should match 106.xml with snapshot: reported 1`] = `
{
  "actual": "<?pi data?>
 <doc/>",
  "errors": [
    [
      "error",
      "Unexpected content outside root element: '&#32;'",
      {
        "columnNumber": 6,
        "lineNumber": 2,
      },
    ],
  ],
}
`;

exports[`xmltest/not-wellformed standalone should match 107.xml with snapshot: caught 1`] = `"Error in internal subset at position 16"`;

exports[`xmltest/not-wellformed standalone should match 108.xml with snapshot: caught 1`] = `"Invalid CDATA starting at position 6"`;

exports[`xmltest/not-wellformed standalone should match 109.xml with snapshot: caught 1`] = `"missing root element"`;

exports[`xmltest/not-wellformed standalone should match 110.xml with snapshot: reported 1`] = `
{
  "actual": "<!DOCTYPE doc [
<!ENTITY e "">
]>
<doc/>",
  "errors": [
    [
      "error",
      "Extra content at the end of the document",
      {
        "columnNumber": 1,
        "lineNumber": 4,
      },
    ],
  ],
}
`;

exports[`xmltest/not-wellformed standalone should match 111.xml with snapshot: caught 1`] = `"missing root element"`;

exports[`xmltest/not-wellformed standalone should match 112.xml with snapshot: caught 1`] = `"Invalid CDATA starting at position 6"`;

exports[`xmltest/not-wellformed standalone should match 113.xml with snapshot: caught 1`] = `"Error in internal subset at position 16"`;

exports[`xmltest/not-wellformed standalone should match 114.xml with snapshot: caught 1`] = `"Error in internal subset at position 16"`;

exports[`xmltest/not-wellformed standalone should match 115.xml with snapshot: reported 1`] = `
{
  "actual": "<!DOCTYPE doc [
<!ENTITY e "&#38;">
]>
<doc a="&amp;e;"/>",
  "errors": [
    [
      "error",
      "entity not found:&e;",
      {
        "columnNumber": 8,
        "lineNumber": 4,
      },
    ],
  ],
}
`;

exports[`xmltest/not-wellformed standalone should match 116.xml with snapshot: reported 1`] = `
{
  "actual": "<!DOCTYPE doc [
<!ENTITY e "&#38;#9">
]>
<doc>&amp;e;7;</doc>",
  "errors": [
    [
      "error",
      "entity not found:&e;",
      {
        "columnNumber": 6,
        "lineNumber": 4,
      },
    ],
  ],
}
`;

exports[`xmltest/not-wellformed standalone should match 117.xml with snapshot: reported 1`] = `
{
  "actual": "<!DOCTYPE doc [
<!ENTITY e "&#38;">
]>
<doc>&amp;e;#97;</doc>",
  "errors": [
    [
      "error",
      "entity not found:&e;",
      {
        "columnNumber": 6,
        "lineNumber": 4,
      },
    ],
  ],
}
`;

exports[`xmltest/not-wellformed standalone should match 118.xml with snapshot: reported 1`] = `
{
  "actual": "<!DOCTYPE doc [
<!ENTITY e "#">
]>
<doc>&amp;&amp;e;97;</doc>",
  "errors": [
    [
      "error",
      "entity not found:&e;",
      {
        "columnNumber": 6,
        "lineNumber": 4,
      },
    ],
  ],
}
`;

exports[`xmltest/not-wellformed standalone should match 119.xml with snapshot: reported 1`] = `
{
  "actual": "<!DOCTYPE doc [
<!ENTITY e "&#38;">
]>
<doc>
&amp;e;#38;
</doc>",
  "errors": [
    [
      "error",
      "entity not found:&e;",
      {
        "columnNumber": 6,
        "lineNumber": 4,
      },
    ],
  ],
}
`;

exports[`xmltest/not-wellformed standalone should match 120.xml with snapshot: reported 1`] = `
{
  "actual": "<!DOCTYPE doc [
<!ENTITY e "&#38;">
]>
<doc>
&amp;e;
</doc>",
  "errors": [
    [
      "error",
      "entity not found:&e;",
      {
        "columnNumber": 6,
        "lineNumber": 4,
      },
    ],
  ],
}
`;

exports[`xmltest/not-wellformed standalone should match 121.xml with snapshot: caught 1`] = `"Error in internal subset at position 16"`;

exports[`xmltest/not-wellformed standalone should match 122.xml with snapshot: reported 1`] = `
{
  "actual": "<!DOCTYPE doc [
<!ELEMENT doc (a, (b) | c)?>
]>
<doc/>",
}
`;

exports[`xmltest/not-wellformed standalone should match 123.xml with snapshot: reported 1`] = `
{
  "actual": "<!DOCTYPE doc [
<!ELEMENT doc ((doc?)))>
]>
<doc/>",
}
`;

exports[`xmltest/not-wellformed standalone should match 124.xml with snapshot: reported 1`] = `
{
  "actual": "<!DOCTYPE doc [
<!ELEMENT doc (doc|#PCDATA)*>
]>
<doc/>",
}
`;

exports[`xmltest/not-wellformed standalone should match 125.xml with snapshot: reported 1`] = `
{
  "actual": "<!DOCTYPE doc [
<!ELEMENT doc ((#PCDATA))>
]>
<doc/>",
}
`;

exports[`xmltest/not-wellformed standalone should match 126.xml with snapshot: reported 1`] = `
{
  "actual": "<!DOCTYPE doc [
<!ELEMENT doc (#PCDATA)+>
]>
<doc/>",
}
`;

exports[`xmltest/not-wellformed standalone should match 127.xml with snapshot: reported 1`] = `
{
  "actual": "<!DOCTYPE doc [
<!ELEMENT doc (#PCDATA)?>
]>
<doc/>",
}
`;

exports[`xmltest/not-wellformed standalone should match 128.xml with snapshot: caught 1`] = `"Error in internal subset at position 16"`;

exports[`xmltest/not-wellformed standalone should match 129.xml with snapshot: caught 1`] = `"Error in internal subset at position 16"`;

exports[`xmltest/not-wellformed standalone should match 130.xml with snapshot: reported 1`] = `
{
  "actual": "<!DOCTYPE doc [
<!ELEMENT doc (doc?) +(foo)>
]>
<doc/>",
}
`;

exports[`xmltest/not-wellformed standalone should match 131.xml with snapshot: reported 1`] = `
{
  "actual": "<!DOCTYPE doc [
<!ELEMENT doc (doc?) -(foo)>
]>
<doc/>",
}
`;

exports[`xmltest/not-wellformed standalone should match 132.xml with snapshot: reported 1`] = `
{
  "actual": "<!DOCTYPE doc [
<!ELEMENT doc (a, (b, c), (d, (e, f) | g))?>
]>
<doc/>",
}
`;

exports[`xmltest/not-wellformed standalone should match 133.xml with snapshot: reported 1`] = `
{
  "actual": "<!DOCTYPE doc [
<!ELEMENT doc (a *)>
]>
<doc/>",
}
`;

exports[`xmltest/not-wellformed standalone should match 134.xml with snapshot: caught 1`] = `"Error in internal subset at position 16"`;

exports[`xmltest/not-wellformed standalone should match 135.xml with snapshot: reported 1`] = `
{
  "actual": "<!DOCTYPE doc [
<!ELEMENT doc (a & b)?>
]>
<doc/>",
}
`;

exports[`xmltest/not-wellformed standalone should match 136.xml with snapshot: caught 1`] = `"Error in internal subset at position 16"`;

exports[`xmltest/not-wellformed standalone should match 137.xml with snapshot: caught 1`] = `"Error in internal subset at position 16"`;

exports[`xmltest/not-wellformed standalone should match 138.xml with snapshot: reported 1`] = `
{
  "actual": "<!DOCTYPE doc [
<!ELEMENT doc (doc*?)>
]>
<doc/>",
}
`;

exports[`xmltest/not-wellformed standalone should match 139.xml with snapshot: caught 1`] = `"Error in internal subset at position 16"`;

exports[`xmltest/not-wellformed standalone should match 140.xml with snapshot: reported 1`] = `
{
  "actual": "<!DOCTYPE doc [
<!ENTITY e "<&#x309a;></&#x309a;>">
]>
<doc>&amp;e;</doc>",
  "errors": [
    [
      "error",
      "entity not found:&e;",
      {
        "columnNumber": 6,
        "lineNumber": 4,
      },
    ],
  ],
}
`;

exports[`xmltest/not-wellformed standalone should match 141.xml with snapshot: reported 1`] = `
{
  "actual": "<!DOCTYPE doc [
<!ENTITY e "<X&#xe5c;></X&#xe5c;>">
]>
<doc>&amp;e;</doc>",
  "errors": [
    [
      "error",
      "entity not found:&e;",
      {
        "columnNumber": 6,
        "lineNumber": 4,
      },
    ],
  ],
}
`;

exports[`xmltest/not-wellformed standalone should match 142.xml with snapshot: reported 1`] = `
{
  "actual": "<!DOCTYPE doc [
<!ELEMENT doc (#PCDATA)>
]>
<doc>{!0!}</doc>",
}
`;

exports[`xmltest/not-wellformed standalone should match 143.xml with snapshot: reported 1`] = `
{
  "actual": "<!DOCTYPE doc [
<!ELEMENT doc (#PCDATA)>
]>
<doc>{!1f!}</doc>",
}
`;

exports[`xmltest/not-wellformed standalone should match 144.xml with snapshot: reported 1`] = `
{
  "actual": "<!DOCTYPE doc [
<!ELEMENT doc (#PCDATA)>
]>
<doc>{!ffff!}</doc>",
}
`;

exports[`xmltest/not-wellformed standalone should match 145.xml with snapshot: reported 1`] = `
{
  "actual": "<!DOCTYPE doc [
<!ELEMENT doc (#PCDATA)>
]>
<doc>{!d800!}</doc>",
}
`;

exports[`xmltest/not-wellformed standalone should match 146.xml with snapshot: reported 1`] = `
{
  "actual": "<!DOCTYPE doc [
<!ELEMENT doc (#PCDATA)>
]>
<doc>{!dc00!}{!dc00!}</doc>",
}
`;

exports[`xmltest/not-wellformed standalone should match 147.xml with snapshot: caught 1`] = `"processing instruction at position 1 is an xml declaration which is only at the start of the document"`;

exports[`xmltest/not-wellformed standalone should match 148.xml with snapshot: caught 1`] = `"processing instruction at position 9 is an xml declaration which is only at the start of the document"`;

exports[`xmltest/not-wellformed standalone should match 149.xml with snapshot: caught 1`] = `"xml declaration is only allowed at the start of the document, but found at position 41"`;

exports[`xmltest/not-wellformed standalone should match 150.xml with snapshot: caught 1`] = `"processing instruction at position 6 is an xml declaration which is only at the start of the document"`;

exports[`xmltest/not-wellformed standalone should match 151.xml with snapshot: caught 1`] = `"processing instruction at position 13 is an xml declaration which is only at the start of the document"`;

exports[`xmltest/not-wellformed standalone should match 152.xml with snapshot: caught 1`] = `"xml declaration is not well-formed"`;

exports[`xmltest/not-wellformed standalone should match 153.xml with snapshot: reported 1`] = `
{
  "actual": "<!DOCTYPE doc [
<!ELEMENT doc (#PCDATA)>
<!ENTITY e "<?xml encoding='UTF-8'?>">
]>
<doc>&amp;e;</doc>",
  "errors": [
    [
      "error",
      "entity not found:&e;",
      {
        "columnNumber": 6,
        "lineNumber": 5,
      },
    ],
  ],
}
`;

exports[`xmltest/not-wellformed standalone should match 154.xml with snapshot: caught 1`] = `"xml declaration is not well-formed"`;

exports[`xmltest/not-wellformed standalone should match 155.xml with snapshot: caught 1`] = `"xml declaration is not well-formed"`;

exports[`xmltest/not-wellformed standalone should match 156.xml with snapshot: caught 1`] = `"processing instruction at position 6 is an xml declaration which is only at the start of the document"`;

exports[`xmltest/not-wellformed standalone should match 157.xml with snapshot: caught 1`] = `"processing instruction at position 6 is an xml declaration which is only at the start of the document"`;

exports[`xmltest/not-wellformed standalone should match 158.xml with snapshot: caught 1`] = `"Error in internal subset at position 79"`;

exports[`xmltest/not-wellformed standalone should match 159.xml with snapshot: caught 1`] = `"Error in internal subset at position 41"`;

exports[`xmltest/not-wellformed standalone should match 160.xml with snapshot: reported 1`] = `
{
  "actual": "<!DOCTYPE doc [
<!ELEMENT doc (#PCDATA)>
<!ENTITY % e "">
<!ENTITY foo "%e;">
]>
<doc/>",
}
`;

exports[`xmltest/not-wellformed standalone should match 161.xml with snapshot: reported 1`] = `
{
  "actual": "<!DOCTYPE doc [
<!ENTITY % e "#PCDATA">
<!ELEMENT doc (%e;)>
]>
<doc/>",
}
`;

exports[`xmltest/not-wellformed standalone should match 162.xml with snapshot: reported 1`] = `
{
  "actual": "<!DOCTYPE doc [
<!ELEMENT doc (#PCDATA)>
<!ENTITY % e1 "">
<!ENTITY % e2 "%e1;">
]>
<doc/>",
}
`;

exports[`xmltest/not-wellformed standalone should match 163.xml with snapshot: reported 1`] = `
{
  "actual": "<!DOCTYPE doc [
<!ELEMENT doc (#PCDATA)>
<!ENTITY % e "">
]><doc/>",
  "errors": [
    [
      "error",
      "Unexpected content outside root element: '%e;'",
      {
        "columnNumber": 1,
        "lineNumber": 6,
      },
    ],
  ],
}
`;

exports[`xmltest/not-wellformed standalone should match 164.xml with snapshot: caught 1`] = `"doctype not terminated with > at position 60"`;

exports[`xmltest/not-wellformed standalone should match 165.xml with snapshot: caught 1`] = `"Error in internal subset at position 16"`;

exports[`xmltest/not-wellformed standalone should match 166.xml with snapshot: reported 1`] = `
{
  "actual": "<doc>{!ffff!}</doc>",
}
`;

exports[`xmltest/not-wellformed standalone should match 167.xml with snapshot: reported 1`] = `
{
  "actual": "<doc>{!fffe!}</doc>",
}
`;

exports[`xmltest/not-wellformed standalone should match 168.xml with snapshot: reported 1`] = `
{
  "actual": "<doc>{!fffd!}{!fffd!}{!fffd!}</doc>",
  "errors": [
    [
      "warning",
      "Unicode replacement character detected, source encoding issues?",
      {
        "columnNumber": 6,
        "lineNumber": 1,
      },
    ],
  ],
}
`;

exports[`xmltest/not-wellformed standalone should match 169.xml with snapshot: reported 1`] = `
{
  "actual": "<doc>{!fffd!}{!fffd!}{!fffd!}</doc>",
  "errors": [
    [
      "warning",
      "Unicode replacement character detected, source encoding issues?",
      {
        "columnNumber": 6,
        "lineNumber": 1,
      },
    ],
  ],
}
`;

exports[`xmltest/not-wellformed standalone should match 170.xml with snapshot: reported 1`] = `
{
  "actual": "<doc>{!fffd!}{!fffd!}{!fffd!}{!fffd!}</doc>",
  "errors": [
    [
      "warning",
      "Unicode replacement character detected, source encoding issues?",
      {
        "columnNumber": 6,
        "lineNumber": 1,
      },
    ],
  ],
}
`;

exports[`xmltest/not-wellformed standalone should match 171.xml with snapshot: caught 1`] = `"comment is not well-formed at position 0"`;

exports[`xmltest/not-wellformed standalone should match 172.xml with snapshot: caught 1`] = `"Invalid processing instruction starting at position 0"`;

exports[`xmltest/not-wellformed standalone should match 173.xml with snapshot: reported 1`] = `
{
  "actual": "<doc a="{!ffff!}"/>",
}
`;

exports[`xmltest/not-wellformed standalone should match 174.xml with snapshot: caught 1`] = `"Invalid CDATA starting at position 5"`;

exports[`xmltest/not-wellformed standalone should match 175.xml with snapshot: reported 1`] = `
{
  "actual": "<!DOCTYPE doc [
<!ELEMENT doc (#PCDATA)>
<!ENTITY % e "{!ffff!}">
]>
<doc/>",
}
`;

exports[`xmltest/not-wellformed standalone should match 176.xml with snapshot: caught 1`] = `"unclosed xml tag(s): doc"`;

exports[`xmltest/not-wellformed standalone should match 177.xml with snapshot: reported 1`] = `
{
  "actual": "<!DOCTYPE doc [
<!ELEMENT doc (#PCDATA)>
]>
<doc>A{!ffff!}</doc>",
}
`;

exports[`xmltest/not-wellformed standalone should match 178.xml with snapshot: caught 1`] = `"missing root element"`;

exports[`xmltest/not-wellformed standalone should match 179.xml with snapshot: caught 1`] = `"Error in internal subset at position 16"`;

exports[`xmltest/not-wellformed standalone should match 180.xml with snapshot: reported 1`] = `
{
  "actual": "<!DOCTYPE doc [
<!ELEMENT doc (#PCDATA)>
<!ATTLIST doc a CDATA "&e;">
<!ENTITY e "v">
]>
<doc/>",
}
`;

exports[`xmltest/not-wellformed standalone should match 181.xml with snapshot: reported 1`] = `
{
  "actual": "<!DOCTYPE doc [
<!ENTITY e "&#60;![CDATA[">
<!ELEMENT doc (#PCDATA)>
]>
<doc>&amp;e;]]&gt;</doc>",
  "errors": [
    [
      "error",
      "entity not found:&e;",
      {
        "columnNumber": 6,
        "lineNumber": 5,
      },
    ],
  ],
}
`;

exports[`xmltest/not-wellformed standalone should match 182.xml with snapshot: reported 1`] = `
{
  "actual": "<!DOCTYPE doc [
<!ENTITY e "&#60;!--">
<!ELEMENT doc (#PCDATA)>
]>
<doc>&amp;e;--&gt;</doc>",
  "errors": [
    [
      "error",
      "entity not found:&e;",
      {
        "columnNumber": 6,
        "lineNumber": 5,
      },
    ],
  ],
}
`;

exports[`xmltest/not-wellformed standalone should match 183.xml with snapshot: reported 1`] = `
{
  "actual": "<!DOCTYPE doc [
<!ELEMENT doc (#PCDATA | foo*)* >
<!ELEMENT foo EMPTY>
]>
<doc/>",
}
`;

exports[`xmltest/not-wellformed standalone should match 184.xml with snapshot: reported 1`] = `
{
  "actual": "<!DOCTYPE doc [
<!ELEMENT doc (#PCDATA | (foo))* >
<!ELEMENT foo EMPTY>
]>
<doc/>",
}
`;

exports[`xmltest/not-wellformed standalone should match 185.xml with snapshot: reported 1`] = `
{
  "actual": "<?xml version="1.0" standalone="yes"?>
<!DOCTYPE doc SYSTEM "185.ent">
<doc>&amp;e;</doc>",
  "errors": [
    [
      "error",
      "entity not found:&e;",
      {
        "columnNumber": 6,
        "lineNumber": 3,
      },
    ],
  ],
}
`;

exports[`xmltest/not-wellformed standalone should match 186.xml with snapshot: reported 1`] = `
{
  "actual": "<!DOCTYPE a [
<!ELEMENT a EMPTY>
<!ATTLIST a b CDATA #IMPLIED d CDATA #IMPLIED>
]>
<a b="c" d="e"/>",
  "errors": [
    [
      "warning",
      "attribute space is required"b"!!",
      {
        "columnNumber": 11,
        "lineNumber": 5,
      },
    ],
  ],
}
`;
